<?xml version="1.0"?>

<!--
  Copyright (C) Nginx, Inc.
  -->

<!DOCTYPE article SYSTEM "../../../dtd/article.dtd">

<article name="如何在Win32平台上用Visual C编译nginx"
         link="/cn/docs/howto_build_on_win32.html"
         lang="cn"
         rev="1"
         translator="樵客"
         >

<section name="准备条件">

<para>
为了在<registered>Microsoft Win32</registered>平台编译nginx，你需要做如下准备：	
<list type="bullet">

<listitem>
Microsoft Visual C 编译器。已知<registered>Microsoft Visual Studio</registered>8和10是可用的。
</listitem>

<listitem>
<link url="http://www.mingw.org/wiki/MSYS">MSYS</link>。
</listitem>

<listitem>
如果想编译<registered>OpenSSL</registered>，以及为nginx添加SSL支持，需要安装Perl，比如<link url="http://www.activestate.com/activeperl">ActivePerl</link>或者<link url="http://strawberryperl.com">Strawberry Perl</link>。
</listitem>

<listitem>
<registered>Subversion</registered> 客户端。可以从这个<link url="http://subversion.apache.org/packages.html#windows">列表
</link>中任选一个。
</listitem>

<listitem>
<link url="http://www.pcre.org">PCRE</link>, <link url="http://zlib.net">zlib</link>
以及 <link url="http://www.openssl.org">OpenSSL</link> 库的源文件。
</listitem>

</list>

</para>

</section>

<section id="build_steps"
         name="编译步骤">

<para>
在开始编译之前，确保Perl的路径、Subversion以及MSYS的bin路径已经添加到系统环境变量PATH中。
运行Visual C安装目录下的vcvarsall.bat脚本来设置Visual C环境。
</para>

<para>
nginx编译过程：
<list type="bullet">

<listitem>
启动MSYS bash。	
</listitem>

<listitem>
从svn.nvinx.org仓库检出nginx的源代码。例如：
<programlisting>
svn co svn://svn.nginx.org/tags/release-1.1.6
</programlisting>
</listitem>

<listitem>
为构建项目创建目录，然后创建lib目录，并将zlib、PCRE以及OpenSSL库的源代码解压到lib目录：
<programlisting>
mkdir objs
mkdir objs/lib
cd objs/lib
unzip ../../pcre-8.12.zip
tar -xzf ../../zlib-1.2.5.tar.gz
tar -xzf ../../openssl-1.0.0e.tar.gz
</programlisting>
</listitem>

<listitem>
运行配置脚本：
<programlisting>
auto/configure --with-cc=cl --builddir=objs --prefix= \
--conf-path=conf/nginx.conf --pid-path=logs/nginx.pid \
--http-log-path=logs/access.log --error-log-path=logs/error.log \
--sbin-path=nginx.exe --http-client-body-temp-path=temp/client_body_temp \
--http-proxy-temp-path=temp/proxy_temp \
--http-fastcgi-temp-path=temp/fastcgi_temp \
--with-cc-opt=-DFD_SETSIZE=1024 --with-pcre=objs/lib/pcre-8.12 \
--with-zlib=objs/lib/zlib-1.2.5 --with-openssl=objs/lib/openssl-1.0.0e \
--with-select_module --with-http_ssl_module --with-ipv6
</programlisting>
</listitem>

<listitem>
执行make命令：
<programlisting>
nmake -f objs/Makefile
</programlisting>
</listitem>

</list>
</para>

</section>

<section id="see_also"
         name="参见">
<para>
<list type="bullet">
<listitem>
<link doc="windows.xml"/>
</listitem>
</list>
</para>
</section>
</article>
