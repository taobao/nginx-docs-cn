<?xml version="1.0"?>

<!--
  Copyright (C) Igor Sysoev
  Copyright (C) Nginx, Inc.
  -->

<!DOCTYPE module SYSTEM "../../../../dtd/module.dtd">

<module name="ngx_http_charset_module模块"
        link="/cn/docs/http/ngx_http_charset_module.html"
        lang="cn"
        translator="WenMing"
        rev="1">

<section id="summary">

<para>
<literal>ngx_http_charset_module</literal>模块为响应头的<header>Content-Type</header>添加指定的字符集。 

此外，这个模块可以把数据从一个字符集转换为另一个字符集，但也有以下限制：
<list type="bullet">

<listitem>
只能单向转换，即从服务端到客户端，
</listitem>

<listitem>
只有单字节字符集能被转换
</listitem>

<listitem>
或者单字节字符集和UTF-8之间的互相转换。
</listitem>

</list>
</para>

</section>


<section id="example" name="配置示例">

<para>
<example>
include        conf/koi-win;

charset        windows-1251;
source_charset koi8-r;
</example>
</para>

</section>


<section id="directives" name="指令">

<directive name="charset">
<syntax><value>charset</value> | <literal>off</literal></syntax>
<default>off</default>
<context>http</context>
<context>server</context>
<context>location</context>
<context>if in location</context>

<para>
为响应头的<header>Content-Type</header>添加指定的字符集。
如果这个字符集和<link id="source_charset"/>指令设置的字符集不同，就会进行转换。
</para>

<para>
参数<literal>off</literal> 表明不在响应头的<header>Content-Type</header>中添加字符集。
</para>

<para>
字符集可以当作变量来定义：
<example>
charset $charset;
</example>
这种情况下，一个变量所有可能的值，至少使用
<link id="charset_map"/> <link id="charset"/>, 或者
<link id="source_charset"/> 指令中的一种来配置。
对于 <literal>utf-8</literal>, <literal>windows-1251</literal>, 和
<literal>koi8-r</literal> 字符集，在配置中包含
<path>conf/koi-win</path>, <path>conf/koi-utf</path>, 和
<path>conf/win-utf</path>这些文件就足够了。
对于其他字符集，简单地做一个虚构转换表就可以了，
比如：
<example>
charset_map iso-8859-5 _ { }
</example>
</para>

<para>
此外，字符集也可以在响应头的
<header>X-Accel-Charset</header>中设置。
这个功能可以使用
<link doc="ngx_http_proxy_module.xml" id="proxy_ignore_headers"/>
和
<link doc="ngx_http_fastcgi_module.xml" id="fastcgi_ignore_headers"/>
指令来禁用。
</para>

</directive>


<directive name="charset_map">
<syntax block="yes"><value>charset1</value> <value>charset2</value></syntax>
<default/>
<context>http</context>

<para>
描述了从一个字符集到另一个字符集的转换表。
反向转换表使用相同的数据来构建。
字符代码用十六进制表示。
在80-FF范围内不能表示的字符使用 “<literal>?</literal>”替换。
当把UTF-8转换为其他字符集时, 单字节字符集中不能表示的字符使用 “<literal>&amp;#XXXX;</literal>”来替换。
</para>

<para>
示例：
<example>
charset_map koi8-r windows-1251 {
    C0 FE ; # small yu
    C1 E0 ; # small a
    C2 E1 ; # small b
    C3 F6 ; # small ts
    ...
}
</example>
</para>

<para>
当描述一个UTF-8的转换表时，UTF-8的字符集代码应该放在第二列，比如：
<example>
charset_map koi8-r utf-8 {
    C0 D18E ; # small yu
    C1 D0B0 ; # small a
    C2 D0B1 ; # small b
    C3 D186 ; # small ts
    ...
}
</example>
</para>

<para>
发行文件<path>conf/koi-win</path>,
<path>conf/koi-utf</path>, and <path>conf/win-utf</path>中已经提供了从<literal>koi8-r</literal>到
<literal>windows-1251</literal>，从<literal>koi8-r</literal>到<literal>utf-8</literal>，以及从
<literal>windows-1251</literal>到<literal>utf-8</literal>的完整转换表。
</para>

</directive>


<directive name="charset_types">
<syntax><value>mime-type</value> ...</syntax>
<default>text/html text/xml text/plain text/vnd.wap.wml
application/x-javascript application/rss+xml</default>
<context>http</context>
<context>server</context>
<context>location</context>
<appeared-in>0.7.9</appeared-in>

<para>
使模块在响应时能处理除了“<literal>text/html</literal>”之外其他指定的MIME类型。
特殊值“<literal>*</literal>” 匹配任意的MIME类型(0.8.29)。
</para>

</directive>


<directive name="override_charset">
<syntax><literal>on</literal> | <literal>off</literal></syntax>
<default>off</default>
<context>http</context>
<context>server</context>
<context>location</context>
<context>if in location</context>

<para>
对于接收到的代理服务器或者FastCGI服务器的响应头中<header>Content-Type</header>已经带有字符集的情况，确定是否进行字符集转换。
如果开启转换，接收到的响应中指定的字符集会被当作原始字符集。
<note>
需要注意的是，如果在子请求中接收到的应答，始终会将应答的字符集转换为主请求的字符集，无论<literal>override_charset</literal>
指令是否开启。
</note>
</para>

</directive>


<directive name="source_charset">
<syntax><value>charset</value></syntax>
<default/>
<context>http</context>
<context>server</context>
<context>location</context>
<context>if in location</context>

<para>
定义响应中的原始字符集。
如果这个字符集和<link id="charset"/>指令设置字符集的不同，就会进行转换。
</para>

</directive>

</section>

</module>
