<?xml version="1.0"?>

<!--
  Copyright (C) Igor Sysoev
  Copyright (C) Nginx, Inc.
  -->

<!DOCTYPE module SYSTEM "../../../../dtd/module.dtd">

<module name="Module ngx_http_memcached_module"
        link="/cn/docs/http/ngx_http_memcached_module.html"
        lang="cn"
        translator="allisstone"
        rev="2">

<section id="summary">

<para>
<literal>ngx_http_memcached_module</literal> 模块允许从一个memcached服务器获取响应。
键在变量<var>$memcached_key</var> 中来设置。响应应经由nginx的外部方法提前放入memcached。
</para>

</section>


<section id="example" name="Example Configuration">

<para>
<example>
server {
    location / {
        set            $memcached_key "$uri?$args";
        memcached_pass host:11211;
        error_page     404 502 504 = @fallback;
    }

    location @fallback {
        proxy_pass     http://backend;
    }
}
</example>
</para>

</section>


<section id="directives" name="Directives">

<directive name="memcached_buffer_size">
<syntax><value>size</value></syntax>
<default>4k|8k</default>
<context>http</context>
<context>server</context>
<context>location</context>

<para>
设置用来接收memcached服务器的响应的读缓存
 <value>size</value> 大小。
响应一经收到，就立刻同步传送给客户端。
</para>

</directive>


<directive name="memcached_connect_timeout">
<syntax><value>time</value></syntax>
<default>60s</default>
<context>http</context>
<context>server</context>
<context>location</context>

<para>
设置一个与memcached服务器建立连接的超时时间。
应当注意的是这个超时时间一般不能超过75秒。
</para>

</directive>


<directive name="memcached_gzip_flag">
<syntax><value>flag</value></syntax>
<default></default>
<context>http</context>
<context>server</context>
<context>location</context>
<appeared-in>1.3.6</appeared-in>

<para>
开启测试memcatched服务器响应是否出现<value>flag</value>标志，
并且标志出现时，设置
“<literal>Content-Encoding</literal>” 响应头为 “<literal>gzip</literal>”。
</para>

</directive>


<directive name="memcached_next_upstream">
<syntax>
    <literal>error</literal> |
    <literal>timeout</literal> |
    <literal>invalid_response</literal> |
    <literal>not_found</literal> |
    <literal>off</literal>
    ...</syntax>
<default>error timeout</default>
<context>http</context>
<context>server</context>
<context>location</context>

<para>
指定在何种情况下，请求应当传送给下一个服务器。
<list type="tag">

<tag-name><literal>error</literal></tag-name>
<tag-desc>在建立连接、发送请求或者读取响应头时出现了错误；</tag-desc>

<tag-name><literal>timeout</literal></tag-name>
<tag-desc>在建立连接、发送请求或者读取响应头时出现了超时；</tag-desc>

<tag-name><literal>invalid_response</literal></tag-name>
<tag-desc>服务器返回一个空的或者无效的响应；</tag-desc>

<tag-name><literal>not_found</literal></tag-name>
<tag-desc>服务器返回内容不存在响应；</tag-desc>

<tag-name><literal>off</literal></tag-name>
<tag-desc>禁止将请求传递给下一个服务器。</tag-desc>

</list>
</para>

<para>
应当认识到，仅当nginx还没有发送任何响应数据到客户端的时候，才能将请求传送给下一个服务器。
就是说，传输响应期间发生错误或者超时，问题不可修复。
</para>

</directive>


<directive name="memcached_pass">
<syntax><value>address</value></syntax>
<default/>
<context>location</context>
<context>if in location</context>

<para>
设置memcached服务器的地址。
地址可以指定为一个域名，也可以是地址和端口的组合，例如：
<example>
memcached_pass localhost:11211;
</example>
</para>

<para>
如果域名解析后对应多个地址，那么采用round-robin的方法来选择地址。
除此之外，服务器也可以被指定为
<link doc="ngx_http_upstream_module.xml">服务器组</link>.
</para>

</directive>


<directive name="memcached_read_timeout">
<syntax><value>time</value></syntax>
<default>60s</default>
<context>http</context>
<context>server</context>
<context>location</context>

<para>
定义从memcached服务器读取响应的超时时间。
这不是整个响应传输时间的超时，而只是两次读操作之间的超时。
如果memcached服务器在此期间不传输任何数据，那么连接将会关闭。
</para>

</directive>


<directive name="memcached_send_timeout">
<syntax><value>time</value></syntax>
<default>60s</default>
<context>http</context>
<context>server</context>
<context>location</context>

<para>
为传输一个请求到memcached服务器设置一个超时时间。
这不是整个请求传输时间的超时，而只是两次写操作之间的超时。
如果memcached服务器在此期间不传输任何数据，那么连接将会关闭。
</para>

</directive>

</section>

</module>
